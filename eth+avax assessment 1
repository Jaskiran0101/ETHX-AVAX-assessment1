// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract errorhandlingexp {
    address public owner;
    uint public data;

    constructor() 
    {owner = msg.sender;
    }

    function setData(uint _data) public {
        require(_data != 0, "Data must be non-zero");
        
        data = _data;
    }

    function assertExp(uint a, uint b) public pure returns (uint) {
        assert(a != b);
        return a + b;
    }

    function onlyOwnerFunction() public view {
        require(msg.sender == owner, "Only owner can call this function"); 
        
    }

    function revertExample(uint a, uint b) public pure returns (uint) {
        if (a < b) {
            revert("Condition not met");
        }
        return a - b;
    }
}
